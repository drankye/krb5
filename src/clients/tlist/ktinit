#!/bin/bash
#
# Copyright 1990 by the Massachusetts Institute of Technology.
# All Rights Reserved.
#
# Export of this software from the United States of America may
#   require a specific license from the United States Government.
#   It is the responsibility of any person or organization contemplating
#   export to obtain such a license before exporting.
#
# WITHIN THAT CONSTRAINT, permission to use, copy, modify, and
# distribute this software and its documentation for any purpose and
# without fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright notice and
# this permission notice appear in supporting documentation, and that
# the name of M.I.T. not be used in advertising or publicity pertaining
# to distribution of the software without specific, written prior
# permission.  Furthermore if you modify this software you must label
# your software as modified software and not distribute it in such a
# fashion that it might be confused with the original M.I.T. software.
# M.I.T. makes no representations about the suitability of
# this software for any purpose.  It is provided "as is" without express
# or implied warranty.
#

function usage() {
    echo "This tool uses token to authenticate to KDC and obtains tgt for you. "
    echo "ktinit [-t token | -T token-cache-file] [-c kerb-ccache-file] [-P principal] [-W kinit and tlist directory]"
    echo "      when no token specified, ~/.tokenauth.token will be used by default"
    exit 1
}

# Main

token=""
token_cache=""
principal=""
directory=""
#result_cc="/tmp/krb5cc_tinit.$$"

kinit="kinit"
tlist="tlist"

while [[ $# > 0 ]]; do
    key="$1"
    shift

    case $key in
	-t)
	    token="$1"
	    shift
	    ;;
	-T)
	    token_cache="$1"
	    shift
	    ;;
        -P)
            principal="$1"
            shift
            ;;
	-c)
	    result_cc="$1"
	    shift
	    ;;
        -W)
            directory="$1"
            shift
            ;;
	-h)
	    usage
	    ;;
	--help)
	    usage
	    ;;
    esac
done

if [[ X"$directory" != X ]]; then
  kinit="$directory/kinit"
  tlist="$directory/tlist"
fi

if [[ X"$token" != X &&  X"$token_cache" != X ]]; then
    echo "Either token or token-cache can be specified, not both"
    usage
fi

if [ X"$token" = X ]; then    
    if [ X"$token_cache" = X ]; then
	cd && homedir=`pwd` && cd -
	token_cache="$homedir/.tokenauth.token"
    fi
    if [ -f $token_cache ]; then
	token=`cat ~/.tokenauth.token`
    fi
fi

if [ X"$token" = X ]; then
    echo "No token is available by default. Please specify your token either via -t or -T"
    usage
fi

if [ X"$principal" = X ]; then
    tempOutput=`$tlist $token`
    if [ $? -ne 0 ]; then
        echo "Failed to decode the token"
        echo $tempOutput
        exit 1
    fi
    principal=`echo $tempOutput | awk -F: '{print $2}'`
    if [ X"$principal" = X ]; then
        echo "Invalid token!"
        exit 1
    fi
fi

echo "Will kinit with token for $principal"

armor_cc=/tmp/krb5cc_armor.$$
$kinit -c $armor_cc -n
if [ $? != 0 ]; then
    echo "Failed to obtain armor ticket"
    exit 1
fi

cc_opt=""
if [ X"$result_cc" != X ]; then
    cc_opt="-c $result_cc"
fi

$kinit -T $armor_cc $cc_opt -X token=$token $principal
if [ $? -ne 0 ]; then
    echo "Failed to obtain tgt ticket with token"
    rm -rf $armor_cc
    exit 1
fi

echo "Successfully obtained tgt in $result_cc cache file with token"
rm -rf $armor_cc

exit 0
